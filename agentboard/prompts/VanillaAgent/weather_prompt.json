{
  "instruction": "We detail name, description, input(parameters) and output(returns) of each action as follows:\nName: get_user_current_date()\nDescription: Get the user's current date.\nReturns:\nThe current date in 'YYYY-MM-DD' format.\n\nName: get_user_current_location()\nDescription: Get the user's current city.\nReturns:\nThe user's current city.\n\nName: get_historical_temp(latitude, longitude, start_date, end_date)\nDescription: Get historical temperature data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the historical data (YYYY-MM-DD).\n- end_date (Type: string): The end date of the historical data (YYYY-MM-DD).\nReturns:\nHistorical temperature data.\n\nName: get_historical_rain(latitude, longitude, start_date, end_date)\nDescription: Get historical rainfall data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the historical data (YYYY-MM-DD).\n- end_date (Type: string): The end date of the historical data (YYYY-MM-DD).\nReturns:\nHistorical rainfall data.\n\nName: get_historical_snow(latitude, longitude, start_date, end_date)\nDescription: Get historical snowfall data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the historical data (YYYY-MM-DD).\n- end_date (Type: string): The end date of the historical data (YYYY-MM-DD).\nReturns:\nHistorical snowfall data.\n\nName: get_snow_forecast(latitude, longitude, start_date, end_date)\nDescription: Get snowfall forecast data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the forecast (YYYY-MM-DD).\n- end_date (Type: string): The end date of the forecast (YYYY-MM-DD).\nReturns:\nSnowfall forecast data.\n\nName: get_current_snow(latitude, longitude, current_date)\nDescription: Get current snowfall data for a specified location and date.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- current_date (Type: string): The current date to retrieve snowfall data (YYYY-MM-DD).\nReturns:\nCurrent snowfall data.\n\nName: get_current_temp(latitude, longitude, current_date)\nDescription: Get current temperature data for a specified location and date.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- current_date (Type: string): The current date to retrieve temperature data (YYYY-MM-DD).\nReturns:\nCurrent temperature data.\n\nName: get_latitude_longitude(name)\nDescription: Get latitude and longitude information for a specified location name.\nParameters:\n- name (Type: string): The name of the location. (e.g., city name)\nReturns:\nlatitude and longitude information for the specified location.\n\nName: get_elevation(latitude, longitude)\nDescription: Get elevation data for a specified location.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\nReturns:\nElevation data for the specified location.\n\nName: get_temp_forecast(latitude, longitude, start_date, end_date)\nDescription: Get temperature forecast data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the forecast (YYYY-MM-DD).\n- end_date (Type: string): The end date of the forecast (YYYY-MM-DD).\nReturns:\nTemperature forecast data.\n\nName: get_rain_forecast(latitude, longitude, start_date, end_date)\nDescription: Get rainfall forecast data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the forecast (YYYY-MM-DD).\n- end_date (Type: string): The end date of the forecast (YYYY-MM-DD).\nReturns:\nRainfall forecast data.\n\nName: get_current_rain(latitude, longitude, current_date)\nDescription: Get current rainfall data for a specified location and date.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- current_date (Type: string): The current date to retrieve rainfall data (YYYY-MM-DD).\nReturns:\nCurrent rainfall data.\n\nName: get_distance(latitude1, longitude1, latitude2, longitude2)\nDescription: Calculate the distance between two sets of latitude and longitude coordinates.\nParameters:\n- latitude1 (Type: number): The latitude of the first location.\n- longitude1 (Type: number): The longitude of the first location.\n- latitude2 (Type: number): The latitude of the second location.\n- longitude2 (Type: number): The longitude of the second location.\nReturns:\nThe distance between the two sets of coordinates in kilometers.\n\nName: get_historical_air_quality_index(latitude, longitude, start_date, end_date)\nDescription: Get historical air quality index data for a specified location and date range.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- start_date (Type: string): The start date of the historical data (YYYY-MM-DD).\n- end_date (Type: string): The end date of the historical data (YYYY-MM-DD).\nReturns:\nHistorical air quality index (PM2.5) data.\n\nName: get_current_air_quality_index(latitude, longitude, current_date)\nDescription: Get current air quality index data for a specified location and date.\nParameters:\n- latitude (Type: number): The latitude of the location.\n- longitude (Type: number): The longitude of the location.\n- current_date (Type: string): The current date to retrieve air quality index data (YYYY-MM-DD).\nReturns:\nCurrent air quality index (PM2.5) data.\n\nName: get_air_quality_level(air_quality_index)\nDescription: Determine the air quality level based on the air quality index (AQI).\nParameters:\n- air_quality_index (Type: number): The air quality index (AQI) value.\nReturns:\nThe air quality level, which can be 'good', 'fair', 'moderate', 'poor', 'very poor', or 'extremely poor'.\n\nName: generate_weather_report(location_name, weather_data, report_type, output_formats, save_to_file, base_directory)\nDescription: Generate comprehensive weather reports in multiple formats (JSON, Markdown, HTML, Text) and automatically save them to files.\nParameters:\n- location_name (Type: string): The name of the location for the report.\n- weather_data (Type: object): Dictionary containing weather data from previous tool calls.\n- report_type (Type: string): Type of report to generate (default: 'comprehensive').\n- output_formats (Type: array): List of output formats, supports 'json', 'markdown', 'html', 'text' (default: ['json', 'markdown', 'html', 'text']).\n- save_to_file (Type: boolean): Whether to save reports to files (default: true).\n- base_directory (Type: string): Base directory for saving files (default: 'weather_reports').\nReturns:\nA comprehensive weather report in the specified formats with file paths, including temperature, precipitation, air quality data, weather summary, and lifestyle recommendations. Files are automatically saved in organized directory structure.\n\nName: check_valid_actions()\nDescription: Get supported actions for current tool.\nReturns:\n- actions (Type: array): Supported actions for current tool.\n\nName: finish(answer)\nDescription: Return an answer and finish the task\nParameters:\n- answer (Type: ['string', 'number', 'array']): The answer to be returned\n\n\nIMPORTANT WORKFLOW INSTRUCTIONS:\n1. Always get the latitude and longitude information of a city by calling \"get_latitude_longitude\", do not generate it by yourself which maybe wrong.\n2. After collecting weather data (temperature, precipitation, air quality, etc.), you MUST call \"generate_weather_report\" to create a comprehensive weather report before finishing the task.\n3. The generate_weather_report tool will automatically save the report files to the weather_reports directory.\n4. Only after generating the weather report should you call \"finish\" action with the report content as the answer.\n\nSTANDARD WORKFLOW:\nStep 1: Get location coordinates using get_latitude_longitude\nStep 2: Collect relevant weather data (temperature, rain, snow, air quality as needed)\nStep 3: MANDATORY - Call generate_weather_report with all collected data\nStep 4: Call finish with the generated report content\n\nIMPORTANT ACTION FORMAT:\n- Use EXACTLY this format: [action_name] with Action Input: [action_input]\n- Do NOT add 'Action:' prefix\n- Examples:\n  ✅ get_latitude_longitude with Action Input: {\"name\": \"London\"}\n  ❌ Action: get_latitude_longitude with Action Input: {\"name\": \"London\"}\n\nPlease refer to the format of examples below to solve the requested goal. Your response must be in the format of \"[your action] with Action Input: [your action input]\"",
  "examples": [
    "Goal: What's the weather like in New York today?\n\nget_latitude_longitude with Action Input: {\"name\": \"New York\"}\nObservation: {'results': [{'name': 'New York', 'latitude': 40.71427, 'longitude': -74.00597, 'country_code': 'US'}, {'name': 'York', 'latitude': 40.86807, 'longitude': -97.592, 'country_code': 'US'}, {'name': 'Clinton', 'latitude': 42.55779, 'longitude': -88.86511, 'country_code': 'US'}]}\nget_user_current_date with Action Input: {}\nObservation: 2023-06-15\nget_current_temp with Action Input: {\"latitude\": 40.71427, \"longitude\": -74.00597, \"current_date\": \"2023-06-15\"}\nObservation: {'latitude': 40.75, 'longitude': -74.0, 'daily_units': {'time': 'iso8601', 'temperature_2m_max': '°C', 'temperature_2m_min': '°C', 'temperature_2m_mean': '°C'}, 'daily': {'time': ['2023-06-15'], 'temperature_2m_max': [26.0], 'temperature_2m_min': [14.8], 'temperature_2m_mean': [19.8]}}\nget_current_rain with Action Input: {\"latitude\": 40.71427, \"longitude\": -74.00597, \"current_date\": \"2023-06-15\"}\nObservation: {'latitude': 40.75, 'longitude': -74.0, 'daily_units': {'time': 'iso8601', 'rain_sum': 'mm'}, 'daily': {'time': ['2023-06-15'], 'rain_sum': [0.0]}}\nget_current_air_quality_index with Action Input: {\"latitude\": 40.71427, \"longitude\": -74.00597, \"current_date\": \"2023-06-15\"}\nObservation: {'latitude': 40.75, 'longitude': -74.0, 'daily_units': {'time': 'iso8601', 'european_aqi_pm2_5': 'AQI'}, 'daily': {'time': ['2023-06-15'], 'european_aqi_pm2_5': [35]}}\nget_air_quality_level with Action Input: {\"air_quality_index\": 35}\nObservation: good\ngenerate_weather_report with Action Input: {\"location_name\": \"New York\", \"weather_data\": {\"temperature\": {\"daily\": {\"temperature_2m_mean\": [19.8], \"temperature_2m_max\": [26.0], \"temperature_2m_min\": [14.8]}}, \"precipitation\": {\"rain\": 0.0, \"snow\": 0.0}, \"air_quality\": {\"index\": 35, \"level\": \"good\"}}}\nObservation: {'success': True, 'reports': {'json': {...}, 'markdown': '# 🌤️ 天气报告\\n\\n## 📍 基本信息\\n- **查询位置**: New York\\n- **查询日期**: 2023-06-15\\n...', 'html': '<!DOCTYPE html>...', 'text': '==================== 天气报告 ====================\\n查询位置: New York\\n...'}, 'files': {'json': 'weather_reports/2023-06-15/weather_report_20230615_120000_abc123/report.json', 'markdown': 'weather_reports/2023-06-15/weather_report_20230615_120000_abc123/report.md', 'html': 'weather_reports/2023-06-15/weather_report_20230615_120000_abc123/report.html', 'text': 'weather_reports/2023-06-15/weather_report_20230615_120000_abc123/report.txt'}, 'metadata': {'report_id': 'weather_report_20230615_120000_abc123', 'generated_at': '2023-06-15T12:00:00', 'location': 'New York', 'formats': ['json', 'markdown', 'html', 'text'], 'base_directory': 'weather_reports/2023-06-15/weather_report_20230615_120000_abc123', 'files_saved': True}}\nfinish with Action Input: {\"answer\": \"Weather report for New York has been generated and saved. The weather today (June 15, 2023) shows a pleasant temperature of 19.8°C (mean), with a high of 26.0°C and low of 14.8°C. There is no rainfall (0.0 mm) and the air quality is good (AQI: 35). Complete reports have been saved in multiple formats at weather_reports/2023-06-15/weather_report_20230615_120000_abc123/\"}\nObservation: Weather report for New York has been generated and saved. The weather today (June 15, 2023) shows a pleasant temperature of 19.8°C (mean), with a high of 26.0°C and low of 14.8°C. There is no rainfall (0.0 mm) and the air quality is good (AQI: 35). Complete reports have been saved in multiple formats at weather_reports/2023-06-15/weather_report_20230615_120000_abc123/\n"
  ],
  "system_msg": "You can use actions to help people solve problems. Remember to always generate a comprehensive weather report after collecting weather data.\n"
}
